{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACHH,EAEAF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAhBJQ,SAASC,cAAc,SAE/BC,iBAAiB,UAkBtB,SAA+BC,GAC7BA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOH,EAAEI,cAAcf,MAAMgB,OAC9C,MAAMC,EAAYH,OAAOH,EAAEI,cAAcG,KAAKF,OACxCG,EAAcL,OAAOH,EAAEI,cAAcK,OAAOJ,OAElD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCvB,EAAcuB,EAAGR,GACdS,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEhEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAG9Da,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromiseOnSubmit);\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n  \n        setTimeout(() => {\n            if (shouldResolve) {\n                // Fulfill\n                resolve({ position, delay });\n            } else {\n                // Reject\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n}\n\nfunction createPromiseOnSubmit(e) {\n  e.preventDefault();\n\n  let delayValue = Number(e.currentTarget.delay.value);\n  const stepValue = Number(e.currentTarget.step.value);\n  const amountValue = Number(e.currentTarget.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      \n      delayValue += stepValue;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delayValue","Number","currentTarget","value","stepValue","step","amountValue","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.8e199993.js.map"}