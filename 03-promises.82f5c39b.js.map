{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACHH,EAEAF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IAhBEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAkBtB,SAA+BC,GAC7BA,EAAEC,iBAMF,IAJA,IAAIC,EAAaC,OAAOH,EAAEI,cAAcf,MAAMgB,OACxCC,EAAYH,OAAOH,EAAEI,cAAcG,KAAKF,OACxCG,EAAcL,OAAOH,EAAEI,cAAcK,OAAOJ,OAEzCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCvB,EAAcuB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG5Da,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromiseOnSubmit);\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n  \n        setTimeout(() => {\n            if (shouldResolve) {\n                // Fulfill\n                resolve({ position, delay });\n            } else {\n                // Reject\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n}\n\nfunction createPromiseOnSubmit(e) {\n  e.preventDefault();\n\n  let delayValue = Number(e.currentTarget.delay.value);\n  const stepValue = Number(e.currentTarget.step.value);\n  const amountValue = Number(e.currentTarget.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      \n      delayValue += stepValue;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delayValue","Number","currentTarget","value","stepValue","step","amountValue","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.82f5c39b.js.map"}